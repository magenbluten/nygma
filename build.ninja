# SPDX-License-Identifier: UNLICENSE

fmt = clang-format10

popt = -DNDEBUG $
  -Wall -Wextra -Weverything -pedantic $
  -Wno-c++98-c++11-c++14-compat $
  -Wno-c99-designator $
  -Wno-gnu-string-literal-operator-template $
  -Wno-c++98-compat $
  -Wno-c++98-compat-pedantic $
  -Wno-gnu-label-as-value $
  -Wno-padded $
  -Wno-weak-vtables $
  -Wno-global-constructors $
  -Wno-exit-time-destructors $
  -Wno-gnu-case-range $
  -Wno-gnu-anonymous-struct $
  -Wno-nested-anon-types $
  -Wno-ctad-maybe-unsupported $
  -Wno-comma

# use -s for `lopt` in case for release builds
lopt =
copt = -stdlib=libc++ -Ofast -ffast-math -flto -fno-rtti -g3

# yolo
rule format
  command = find $in \( -name '*.hxx' -or -name '*.cxx' \) -exec $fmt --verbose -style=file -i '{}' +

rule help
  command = echo "see build.ninja ( ninja -t targets )"

rule clang10
  command = bdep init -C @clang10 cc config.cxx=clang++10 $
    config.cxx.poptions="$popt" $
    config.cxx.coptions="$copt"

rule mirror
  command = darcs convert export --read-marks darcs.marks --write-marks darcs.marks $
    | git fast-import --import-marks=git.marks --export-marks=git.marks

build help : help
build format : format ./nygma ./libnygma
build clang10 : clang10
build mirror : mirror

default help
